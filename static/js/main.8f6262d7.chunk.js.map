{"version":3,"sources":["store/genres.js","store/index.js","components/common/header.js","components/common/layout.js","components/moviesList.js","pages/homePage.js","styledMediaBrakepoints/index.js","components/filmDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","ganresList","paginationPage","rootReducer","combineReducers","ganres","store","type","payload","createStore","composeWithDevTools","applyMiddleware","thunk","Header","useState","searchQuery","setSearchQuery","searchResult","setSearchResult","openDroplist","setOpenDroplist","timer","setTimer","useEffect","length","clearTimeout","url","timeout","setTimeout","console","log","axios","get","then","result","data","results","catch","err","confirmSerch","input","document","querySelector","value","serchResultList","map","id","title","vote_average","Linck","to","key","uuidv4","SerchListItem","onClick","HederContainer","LayoutHeader","SerchBlock","icon","faSearch","style","color","Serchinput","onChange","e","target","SerchResultsCont","styled","div","NavLink","li","Layout","props","MainLayout","className","children","MoviesList","connect","moviesList","setMoviesList","api_key","setPagesQuantity","dataKey","movieId","total_pages","list","slice","poster_path","genres","genre_ids","item","filter","name","MovieBreff","Title","src","alt","ItemFooter","Info","Reiting","Ganres","AllMovies","HomePage","setAvalibleGenres","dispatch","a","fetch","res","json","setIncreasePaginationPage","setReducePaginationPage","pagesQuantity","useLayoutEffect","MoviesData","NavyButtons","DeactivatedBytton","LoadMore","StopPosition","ShowAtPosition","EasingType","AnimationDuration","ContainerClassName","TransitionClassName","ToggledStyle","button","mediaMobile","content","css","FilmDetails","useParams","movieInfo","setMovieInfo","original_title","overview","original_language","runtime","movieGenresList","MovieDitails","MovieCommon","MovieData","ExectData","RecomendedSection","App","basename","exect","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8f6262d7.chunk.js","sourcesContent":["const AVILIBLE_GENRES = \"AVILIBLE_GENRES\"\r\n\r\nconst avalibleGenres = payload =>({\r\n  type:AVILIBLE_GENRES,\r\n  payload\r\n});\r\n\r\nconst INCREASE_PAGINATION_PAGE = \"INCREASE_PAGINATION_PAGE\"\r\n\r\nconst increasePaginationPage = () =>({\r\n  type:INCREASE_PAGINATION_PAGE,\r\n \r\n});\r\nconst REDUCE_PAGINATION_PAGE = \"REDUCE_PAGINATION_PAGE\"\r\n\r\nconst reducePaginationPage = () =>({\r\n  type:REDUCE_PAGINATION_PAGE,\r\n \r\n});\r\n\r\nconst initialState = {\r\n  ganresList:[],\r\n  paginationPage: 1\r\n\r\n};\r\n\r\nexport function  moviesReduser (store = initialState, {type, payload}){\r\n  switch (type){\r\n    case AVILIBLE_GENRES:{\r\n      return {\r\n        ...store,\r\n        ganresList: payload\r\n      }\r\n    }\r\n    case INCREASE_PAGINATION_PAGE:{\r\n      return {\r\n        ...store,\r\n        paginationPage: store.paginationPage+1\r\n      }\r\n    }\r\n    case REDUCE_PAGINATION_PAGE:{\r\n      return {\r\n        ...store,\r\n        paginationPage: store.paginationPage-1\r\n      }\r\n    }\r\n    default:\r\n      return store;\r\n\r\n  }\r\n}\r\n\r\nexport const setAvalibleGenres = () => async dispatch =>{\r\n  const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c215f1cdd43fb62b0e5a94539084aae9&language=en-US`);\r\n  const json = await res.json();\r\n  // console.log(json)\r\n  dispatch(avalibleGenres(json.genres))\r\n};\r\n\r\nexport const setIncreasePaginationPage = ()=>dispatch=>{\r\n  dispatch(increasePaginationPage());\r\n}\r\nexport const setReducePaginationPage = ()=>dispatch=>{\r\n  dispatch(reducePaginationPage());\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {moviesReduser} from './genres'\r\n\r\nconst rootReducer = combineReducers({\r\n  ganres:moviesReduser,\r\n})\r\n const store = createStore(rootReducer, composeWithDevTools(\r\n   applyMiddleware(thunk)\r\n   ))\r\n \r\n export default store;","import React, {useState, useEffect} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const Header = () => {\r\n  const api_key = \"c215f1cdd43fb62b0e5a94539084aae9\";\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [ searchResult, setSearchResult] = useState([]);\r\n  const [ openDroplist, setOpenDroplist] = useState(false);\r\n  const [ timer, setTimer] = useState(0);\r\n\r\n  useEffect(()=>{     \r\n    if (searchQuery.length===0) {      \r\n      clearTimeout( timer);\r\n      setSearchResult([]);\r\n      setOpenDroplist(false);\r\n    }\r\n    else if (searchQuery.length>3){      \r\n      const url =`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&page=1&query=${searchQuery}`\r\n      const timeout = setTimeout(() => {\r\n      console.log(\"request\")\r\n      axios\r\n        .get(url)\r\n         .then(result => {          \r\n          \r\n          setSearchResult(result.data.results);\r\n          searchResult.length !=0 && setOpenDroplist(true);\r\n          console.log(searchResult)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }, 2000);\r\n    setTimer(timeout)\r\n    }      \r\n  }\r\n  ,[searchQuery]);\r\n\r\n  const confirmSerch = ()=>{\r\n    const input = document.querySelector(\"input\");\r\n    input.value = null;\r\n    console.log(input)\r\n    setOpenDroplist(false)}\r\n\r\nconst serchResultList = searchResult && searchResult.map(({id, title, vote_average})=>{\r\n  return (\r\n   <Linck to={`/movieDetales/${id}`} key={uuidv4()}>\r\n      <SerchListItem  onClick = {confirmSerch}>    \r\n          <p>{title}</p>\r\n          <p>{vote_average}</p>       \r\n      </SerchListItem>\r\n  </Linck> )\r\n});\r\n  return (<>\r\n  <HederContainer>\r\n     <LayoutHeader >\r\n      <p>Best movies</p>\r\n    </LayoutHeader>\r\n    <SerchBlock>\r\n      <p>Get movie by title</p>\r\n      <FontAwesomeIcon icon={faSearch} style={{ color: \"white\" }} />\r\n        <Serchinput \r\n          onChange={(e)=>setSearchQuery(e.target.value)}\r\n          type=\"text\">         \r\n        </Serchinput>\r\n      {(searchQuery.length>0 & openDroplist) ? (\r\n        <SerchResultsCont>\r\n          <ul>\r\n            {serchResultList}\r\n          </ul>        \r\n        </SerchResultsCont>) : null}\r\n    </SerchBlock>\r\n  </HederContainer>  \r\n\r\n    </>\r\n  )\r\n};\r\n\r\nconst HederContainer = styled.div`\r\n display: flex;\r\n flex-direction: column;\r\nbackground-color: DarkSlateGray;\r\nmargin-bottom: 20px;\r\n`\r\nconst LayoutHeader = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n& p {\r\n  margin 0;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-weight: bold;  \r\n  padding: 10px 5px;\r\n  font-size: 36px;\r\n}\r\n`\r\nconst SerchBlock = styled.div`\r\n margin: 20px auto;\r\n position: relative;\r\n & p{\r\n   margin: 0;\r\n   color: white;\r\n }\r\n`\r\nconst Serchinput = styled.input`\r\n margin-left: 5px;\r\n `\r\n const SerchResultsCont = styled.div`\r\n position: absolute;\r\n background-color: white;\r\n max-width: 100%;\r\n min-height: 0;\r\n & ul {\r\n   padding: 5px;\r\n   margin: 2px 0;\r\n }\r\n `\r\n const Linck = styled(NavLink)`\r\ntext-decoration:none;\r\n`\r\n const SerchListItem = styled.li`\r\n display: flex;\r\n justify-content: space-between;\r\n &:hover {\r\n   border: 0.5px solid lightgrey\r\n }\r\n & p{\r\n   color: black;\r\n   font-size: 12px;\r\n   padding-bottom: 3px;\r\n }\r\n & p:first-child{\r\n  max-width: 80%;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n & p:last-child{\r\n   font-weight: bold;\r\n }\r\n `","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Header} from './header'\r\n\r\nexport const Layout = props =>{\r\n  return(\r\n    <MainLayout>\r\n      <Header/>\r\n      <main className=\"content\">{props.children}</main>\r\n      {/* <Footer/> */}\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nconst MainLayout = styled.div`\r\ndisplay:flex;\r\nflex-direction: column;\r\nmin-height: 100%\r\nwidth: 100vw;\r\nheight: 100%;\r\nbackground-color: black;\r\npadding-bottom: 50px;\r\n& .content {\r\n  flex-grow:1;\r\n}\r\n`;","import React, { useState, useEffect, useLayoutEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nconst MapStateToProps = store =>({\r\n  ganresList: store.ganres.ganresList,\r\n  paginationPage: store.ganres.paginationPage\r\n}) \r\n\r\nexport const MoviesList =connect(MapStateToProps) (props => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const {api_key, setPagesQuantity, paginationPage, dataKey, id} = props;\r\n const {ganresList} = props;\r\n\r\n  const movieId = id ? `${id}/` :\"\"; \r\n  useEffect(() => {\r\n  \r\n    const url = `https://api.themoviedb.org/3/movie/${movieId}${dataKey}?api_key=${api_key}&language=en-US&page=${paginationPage}`; \r\n    // console.log(url)\r\n    axios.get(url).then(result => {\r\n      console.log(result.data)\r\n      setMoviesList(result.data.results);\r\n      setPagesQuantity && setPagesQuantity(result.data.total_pages)\r\n    });  \r\n}, [paginationPage]);\r\nconst moviesListVariants = id ? (moviesList.slice(0, 6)) : moviesList\r\nconst list = moviesListVariants.map(({title, id,  poster_path, vote_average, genre_ids}) => {\r\n  const movieGanres = genre_ids.map(item =>ganresList.filter(({id})=>id===item).map(({name})=>name)[0]); \r\n  const genres = movieGanres.map(item =>(  \r\n    <p key={uuidv4()}>{item}</p>   \r\n  ));\r\n  return (\r\n<MovieBreff  key={id}>\r\n    <Linck to={`/movieDetales/${id}`}>\r\n      <Title>\r\n        <p className=\"movieTille\">{title}</p>\r\n      </Title>       \r\n        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"not found\"></img>\r\n        <ItemFooter>\r\n          <Info>\r\n            \r\n          </Info>\r\n          \r\n          <Reiting>\r\n          {/* <p>Reting</p> */}\r\n          <p>{vote_average}</p>\r\n        </Reiting>      \r\n        <Ganres>\r\n          {/* <p>Ganre</p> */}\r\n          {genres}\r\n        </Ganres>\r\n        </ItemFooter>       \r\n    </Linck>\r\n   </MovieBreff>\r\n  )\r\n}\r\n ) \r\n\r\nreturn <AllMovies>{list}</AllMovies>\r\n\r\n});\r\n\r\nconst AllMovies = styled.div`\r\ndisplay: flex;\r\nflex-wrap:wrap;\r\njustify-content: center;\r\n\r\n`\r\nconst Linck = styled(NavLink)`\r\ntext-decoration:none;\r\n`\r\n\r\nconst MovieBreff = styled.div`\r\n background: lightgrey;\r\n margin-left: 10px;\r\n margin-bottom: 20px;\r\n width:210px;\r\n & img{\r\n  display: block;\r\n  margin: 0 auto; \r\n  width:200px;\r\n }\r\n & :hover .movieTille{\r\n  text-decoration: underline;\r\n}\r\n`\r\nconst Title = styled.div`\r\ncolor: black;\r\nfont-weight: bold;\r\npadding-left: 5px;\r\nwidth: 200px;\r\np{\r\n  width:200px;\r\n  text-overflow: ellipsis;\r\n  height: 21px;\r\n overflow:hidden;\r\n white-space: nowrap; \r\n color: DarkSlateGray;\r\n}\r\n`\r\nconst Info = styled.div`\r\n\r\n`\r\nconst Reiting = styled.div`\r\ndisplay: flex;\r\n>p{\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin: 5px;\r\n  color:black;\r\n}\r\n`\r\nconst Ganres = styled.div`\r\ndisplay: flex;\r\nwidth: 100px;\r\nflex-wrap: wrap;\r\n>p{\r\n  font-size: 12px; \r\n  margin: 0 2px;\r\n  color:black;\r\n}\r\n`\r\nconst ItemFooter = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\n`\r\n","import React, { useState, useLayoutEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport styled from 'styled-components';\r\n\r\n//store\r\nimport {setAvalibleGenres} from '../store/genres';\r\nimport {setIncreasePaginationPage,\r\n          setReducePaginationPage} from '../store/genres';\r\n //components\r\n  import {Layout} from '../components/common/layout';\r\n  import {MoviesList} from '../components/moviesList';\r\n\r\nconst MapStateToProps = store =>({\r\n  ganresList: store.ganres,\r\n  paginationPage: store.ganres.paginationPage\r\n\r\n})  \r\n\r\nexport const  HomePage =connect(MapStateToProps, {setAvalibleGenres,setIncreasePaginationPage, setReducePaginationPage})(props=> {\r\n   \r\n  const [pagesQuantity, setPagesQuantity] = useState();\r\n const api_key = \"c215f1cdd43fb62b0e5a94539084aae9\";\r\nconst {paginationPage} = props\r\nuseLayoutEffect(()=>{\r\n  props.setAvalibleGenres();\r\n},[])\r\n\r\n\r\n  return (\r\n    <Layout>   \r\n      <MoviesData>        \r\n        <MoviesList api_key={api_key} setPagesQuantity={setPagesQuantity} dataKey={\"popular\"}/>\r\n        {/* <FilmDetails api_key={api_key} movie_id={311}/> */}\r\n      </MoviesData>\r\n      <NavyButtons>\r\n        {paginationPage ===1 ? \r\n        <DeactivatedBytton/> :\r\n        <LoadMore onClick={()=>props.setReducePaginationPage()}>&#171;</LoadMore>}\r\n  <p>page {paginationPage} of {pagesQuantity}</p>\r\n        <LoadMore onClick={()=>props.setIncreasePaginationPage()}>&#187;</LoadMore>\r\n      </NavyButtons>\r\n      <ScrollUpButton \r\n        StopPosition={0}\r\n        ShowAtPosition={900}\r\n        EasingType='easeOutCubic'\r\n        AnimationDuration={500}\r\n        ContainerClassName='ScrollUpButton__Container'\r\n        TransitionClassName='ScrollUpButton__Toggled'\r\n        style={{}}\r\n        ToggledStyle={{}}/>\r\n    </Layout>\r\n  );\r\n});\r\n\r\n\r\nconst MoviesData = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\nconst NavyButtons = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\np{\r\n  padding: 0 5px;\r\n  color: white\r\n}\r\n`\r\nconst LoadMore = styled.button`\r\nwidth: 40px;\r\nmargin: 0;\r\nfont-size: 36px;\r\ntext-align: center;\r\n`\r\nconst DeactivatedBytton = styled.button`\r\nwidth: 40px;\r\nmargin: 0;\r\nfont-size: 36px;\r\ntext-align: center;\r\n`\r\n","import { css } from \"styled-components\";\r\n\r\nexport function mediaDesktop(content) {\r\n  return css`\r\n    @media (min-width: 1200px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}\r\n\r\nexport function mediaTablet(content) {\r\n  return css`\r\n    @media (min-width: 768px) and (max-width: 1199px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}\r\n\r\nexport function mediaMobile(content) {\r\n  return css`\r\n    @media (max-width: 767px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from \"styled-components\";\r\n\r\nimport {Layout} from './common/layout';\r\nimport { mediaMobile } from '../styledMediaBrakepoints';\r\nimport {MoviesList} from '../components/moviesList';\r\n\r\n\r\n\r\n\r\nexport const FilmDetails = (props) => {\r\n  // const { movie_id} = props;\r\n  const { id } = useParams();\r\n  console.log(id)\r\n  const [movieInfo, setMovieInfo] = useState({});\r\n  // const [recomendedMovies, setRecomendedMovies] = useState();\r\n  const api_key = \"c215f1cdd43fb62b0e5a94539084aae9\";\r\n  useLayoutEffect(()=>{\r\n       const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=en-US `\r\n       console.log(url)\r\n       axios.get(url).then(result => {\r\n      // console.log(result.data)\r\n      setMovieInfo(result.data);\r\n    });\r\n  \r\n  },[id])\r\n\r\n\r\n\r\n  const { original_title, original_language, overview, runtime, poster_path, genres } = movieInfo && movieInfo;\r\n\r\n  const movieGenresList = genres && genres.map(({ name }) => name);\r\n  const ganresList = genres && movieGenresList.map(item => (\r\n    <p key={uuidv4()}>{item}</p>\r\n  ));\r\n\r\n \r\n  return(\r\n    <Layout>\r\n      <MovieDitails > \r\n        <MovieCommon>\r\n              <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"not found\"></img>\r\n        <MovieData>     \r\n              <p>{original_title}</p>\r\n              <ExectData>\r\n                <p>Owerviev</p>\r\n                <p>{overview}</p>\r\n              </ExectData>\r\n              <ExectData>\r\n                <p>Genre</p>\r\n                <div>\r\n                  {ganresList}\r\n                </div>\r\n              </ExectData>\r\n              <ExectData>\r\n                <p>Runtime</p>\r\n                <p>{runtime}min</p>\r\n              </ExectData>\r\n            </MovieData>\r\n            </MovieCommon>      \r\n        <RecomendedSection>\r\n          <div>Recomended</div>\r\n          <MoviesList  api_key={api_key} dataKey={\"recommendations\"} id={id} />\r\n      </RecomendedSection>\r\n    </MovieDitails>\r\n  </Layout>\r\n \r\n  )\r\n};\r\n\r\nconst MovieDitails = styled.div`\r\npadding-top: 10px;\r\npadding-bottom: 10px;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color:black;\r\ncolor: white;\r\ndisplay:flex;\r\nflex-direction:column;\r\n${mediaMobile(`\r\nflex-direction:column;\r\nalign-items: center;\r\n`)}\r\n& img {  \r\n  margin: 0 10px;\r\n  width: 180px;\r\n  height: 230px;\r\n  border: 1px solid grey;\r\n}\r\n\r\n`\r\nconst MovieCommon = styled.div`\r\ndisplay:flex;\r\n${mediaMobile(`\r\nflex-direction:column;\r\nalign-items: center;\r\n`)}\r\n`\r\nconst MovieData = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items:center;\r\n>p{\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n}\r\n`\r\nconst ExectData = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: flex-start;\r\n & p{ \r\n  margin: 0;\r\n  padding: 3px 5px;\r\n  font-size: 12px;\r\n }\r\n & p:first-child{\r\n  text-align:left;\r\n  vertical-align:middle;\r\n font-weight: bold;\r\n width: 55px;\r\n }\r\n & div{\r\ndisplay:flex;\r\n& p{\r\n  font-weight: 400 !important; \r\n}\r\n }\r\n & p:last-child{\r\n  text-align:left;\r\n  }\r\n`\r\nconst RecomendedSection = styled.div`\r\n margit-top: 30px;\r\n >div{\r\n   margin: 20px auto;\r\n   width: fit-content;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n }\r\n`","import React, { useState, useEffect} from 'react';\nimport {BrowserRouter as Router, HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './store/index'\nimport {HomePage} from './pages/homePage';\nimport {FilmDetails} from './components/filmDetails';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      {/* <Router > */}\n      <HashRouter basename=\"/filmsList\">\n        <Switch>\n          <Route exect path ='/FilmsList' component={HomePage}/>\n          <Route path ='/movieDetales/:id'  component={FilmDetails}/>\n          <Redirect to=\"/FilmsList\" />\n        </Switch> \n        </HashRouter>   \n    {/* </Router> */}\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}