{"version":3,"sources":["store/reduser.js","store/index.js","store/actions.js","components/common/header.js","components/common/footer.js","components/common/layout.js","components/moviesList.js","pages/homePage.js","styledMediaBrakepoints/index.js","components/filmDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","ganresList","paginationPage","api_key","rootReducer","combineReducers","ganres","store","type","payload","createStore","composeWithDevTools","applyMiddleware","thunk","Header","connect","props","useState","searchQuery","setSearchQuery","searchResult","setSearchResult","openDroplist","setOpenDroplist","timer","setTimer","useEffect","length","clearTimeout","url","timeout","setTimeout","axios","get","then","result","data","results","total_results","catch","err","console","log","serchResultList","map","id","title","vote_average","Linck","to","key","uuidv4","SerchListItem","onClick","HederContainer","LayoutHeader","Info","LinckToMain","SerchBlock","icon","faSearch","style","color","Serchinput","onChange","e","target","value","SerchResultsCont","styled","div","NavLink","input","li","Footer","FooterContainer","Layout","MainLayout","className","children","MoviesList","moviesList","setMoviesList","isRecomendationsAvailable","setIsRecomendationsAvailable","setPagesQuantity","dataKey","movieId","total_pages","list","slice","poster_path","genres","genre_ids","item","filter","name","MovieBreff","height","width","Title","src","alt","ItemFooter","Reiting","Ganres","AllMovies","HomePage","setAvalibleGenres","dispatch","setIncreasePaginationPage","setReducePaginationPage","pagesQuantity","useLayoutEffect","MoviesData","NavyButtons","DeactivatedBytton","LoadMore","StopPosition","ShowAtPosition","EasingType","AnimationDuration","bottom","button","mediaMobile","content","css","FilmDetails","useParams","movieInfo","setMovieInfo","original_title","overview","runtime","movieGenresList","MovieDitails","MovieCommon","MovieData","ExectData","RecomendedSection","App","basename","exect","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fd5a7630.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {avalibleGenres, \r\n        increasePaginationPage, \r\n        reducePaginationPage, \r\n        AVILIBLE_GENRES,\r\n        INCREASE_PAGINATION_PAGE,\r\n        REDUCE_PAGINATION_PAGE} from './actions';\r\n\r\n\r\nconst initialState = {\r\n  ganresList:[],\r\n  paginationPage: 1,\r\n  api_key: \"c215f1cdd43fb62b0e5a94539084aae9\",\r\n\r\n};\r\n\r\nexport function  moviesReduser (store = initialState, {type, payload}){\r\n  switch (type){\r\n    case AVILIBLE_GENRES:{\r\n      return {\r\n        ...store,\r\n        ganresList: payload\r\n      }\r\n    }\r\n    case INCREASE_PAGINATION_PAGE:{\r\n      return {\r\n        ...store,\r\n        paginationPage: store.paginationPage+1\r\n      }\r\n    }\r\n    case REDUCE_PAGINATION_PAGE:{\r\n      return {\r\n        ...store,\r\n        paginationPage: store.paginationPage-1\r\n      }\r\n    }\r\n    default:\r\n      return store;\r\n\r\n  }\r\n}\r\n\r\nexport const setAvalibleGenres = () => dispatch =>{\r\n  axios\r\n  .get(`https://api.themoviedb.org/3/genre/movie/list?api_key=c215f1cdd43fb62b0e5a94539084aae9&language=en-US`)\r\n   .then(result => {     \r\n   const {genres} =result.data;  \r\n   dispatch(avalibleGenres(genres));   \r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n  \r\n};\r\n\r\nexport const setIncreasePaginationPage = ()=>dispatch=>{\r\n  dispatch(increasePaginationPage());\r\n}\r\nexport const setReducePaginationPage = ()=>dispatch=>{\r\n  dispatch(reducePaginationPage());\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {moviesReduser} from './reduser'\r\n\r\nconst rootReducer = combineReducers({\r\n  ganres:moviesReduser,\r\n})\r\n const store = createStore(rootReducer, composeWithDevTools(\r\n   applyMiddleware(thunk)\r\n   ))\r\n \r\n export default store;","export const AVILIBLE_GENRES = \"AVILIBLE_GENRES\"\r\n\r\nexport const avalibleGenres = payload =>({\r\n  type:AVILIBLE_GENRES,\r\n  payload\r\n});\r\n\r\nexport const INCREASE_PAGINATION_PAGE = \"INCREASE_PAGINATION_PAGE\"\r\n\r\nexport const increasePaginationPage = () =>({\r\n  type:INCREASE_PAGINATION_PAGE,\r\n \r\n});\r\nexport const REDUCE_PAGINATION_PAGE = \"REDUCE_PAGINATION_PAGE\"\r\n\r\nexport const reducePaginationPage = () =>({\r\n  type:REDUCE_PAGINATION_PAGE,\r\n \r\n});","import React, {useState, useEffect} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst MapStateToProps = store =>({\r\n  api_key: store.ganres.api_key\r\n}); \r\n\r\nexport const Header =connect (MapStateToProps) (props => {\r\n  const {api_key} = props;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [ searchResult, setSearchResult] = useState([]);\r\n  const [ openDroplist, setOpenDroplist] = useState(false);\r\n  const [ timer, setTimer] = useState(0);\r\n  \r\n  useEffect(()=>{     \r\n    if (searchQuery.length===0) {      \r\n      clearTimeout( timer);\r\n      setSearchResult([]);\r\n      setOpenDroplist(false);\r\n    }\r\n    else if (searchQuery.length>3){      \r\n      const url =`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&page=1&query=${searchQuery}`\r\n      const timeout = setTimeout(() => {    \r\n      axios\r\n        .get(url)\r\n         .then(result => {     \r\n         \r\n          setSearchResult(result.data.results);\r\n         (result.data.total_results)  ? setOpenDroplist(true) :setOpenDroplist(false);\r\n         \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }, 1500);\r\n    setTimer(timeout)\r\n    }      \r\n  }\r\n  ,[searchQuery]);\r\n\r\nconst serchResultList = searchResult && searchResult.map(({id, title, vote_average})=>{\r\n  return (\r\n   <Linck to={`/movieDetales/${id}`} key={uuidv4()} >\r\n      <SerchListItem onClick={()=>setOpenDroplist(false)} >    \r\n          <p>{title}</p>\r\n          <p>{vote_average}</p>       \r\n      </SerchListItem>\r\n  </Linck> )\r\n});\r\n  return (<>\r\n  <HederContainer>\r\n     <LayoutHeader >\r\n      <p>Best movies</p>\r\n    </LayoutHeader>\r\n     <Info>\r\n        <LinckToMain to='/FilmsList'>\r\n          <p>&#8617; Back to main</p>\r\n        </LinckToMain>\r\n        <SerchBlock>\r\n        <p>Movie search</p>\r\n        <FontAwesomeIcon icon={faSearch} style={{ color: \"white\" }} />\r\n          <Serchinput \r\n            onChange={(e)=>setSearchQuery(e.target.value)}\r\n            type=\"text\">         \r\n          </Serchinput>\r\n        {( openDroplist) ? (\r\n          <SerchResultsCont>\r\n            <ul>\r\n              {serchResultList}\r\n            </ul>        \r\n          </SerchResultsCont>) : null}\r\n      </SerchBlock>      \r\n    </Info>          \r\n  \r\n  </HederContainer>  \r\n\r\n    </>\r\n  )\r\n});\r\n\r\nconst HederContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: DarkSlateGray;\r\nmargin-bottom: 20px;\r\ncolor: lightgrey;\r\n`\r\nconst LayoutHeader = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n& p {\r\n  margin 0;\r\n  text-transform: uppercase;\r\n  font-weight: bold;  \r\n  padding: 10px 5px;\r\n  font-size: 36px;\r\n}\r\n`\r\nconst Info = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: flex-end;\r\n`\r\nconst LinckToMain = styled(NavLink)`\r\ntext-decoration:none;\r\ncolor: lightgrey;\r\nheight: fit-content;\r\n margin: 10px 5px;\r\np{\r\n  margin: 0;\r\n}\r\n`\r\nconst SerchBlock = styled.div`\r\n  margin: 10px 5px;\r\n position: relative;\r\n & p{\r\n   margin: 0;\r\n }\r\n`\r\nconst Serchinput = styled.input`\r\n margin-left: 5px;\r\n `\r\n const SerchResultsCont = styled.div`\r\n position: absolute;\r\n background-color: white;\r\n max-width: 100%;\r\n min-height: 0;\r\n & ul {\r\n   padding: 5px;\r\n   margin: 2px 0;\r\n }\r\n `\r\n const Linck = styled(NavLink)`\r\ntext-decoration:none;\r\n`\r\n const SerchListItem = styled.li`\r\n display: flex;\r\n justify-content: space-between;\r\n &:hover {\r\n   border: 0.5px solid lightgrey\r\n }\r\n & p{\r\n   color: black;\r\n   font-size: 12px;\r\n   padding-bottom: 3px;\r\n }\r\n & p:first-child{\r\n  max-width: 80%;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n & p:last-child{\r\n   font-weight: bold;\r\n }\r\n `","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const Footer = () =>{\r\n  return(\r\n    <FooterContainer>\r\n        <p> Designed by Igor Shakhter. All rights reserved &#169;</p>\r\n    </FooterContainer>\r\n  )\r\n}\r\n\r\nconst FooterContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n background-color: DarkSlateGray; \r\n margin-top: 20px;\r\n color: lightgrey;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Header} from './header';\r\nimport {Footer} from './footer'\r\n\r\nexport const Layout = props =>{\r\n  return(\r\n    <MainLayout>\r\n      <Header/>\r\n      <main className=\"content\">{props.children}</main>\r\n      <Footer/>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nconst MainLayout = styled.div`\r\ndisplay:flex;\r\nflex-direction: column;\r\nmin-height: 100%\r\nwidth: 100vw;\r\nheight: 100%;\r\nbackground-color: black;\r\n& .content {\r\n  flex-grow:1;\r\n}\r\n`;","import React, { useState, useEffect, useLayoutEffect, Children} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nconst MapStateToProps = store =>({\r\n  ganresList: store.ganres.ganresList,\r\n  paginationPage: store.ganres.paginationPage,\r\n  api_key: store.ganres.api_key\r\n}) \r\n\r\nexport const MoviesList =connect(MapStateToProps) (props => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [isRecomendationsAvailable, setIsRecomendationsAvailable]= useState(true);\r\n  const {api_key,\r\n        setPagesQuantity, \r\n        paginationPage, \r\n        dataKey,\r\n        id, \r\n        ganresList} = props;\r\n  const movieId = id ? `${id}/` :\"\"; \r\n  useEffect(() => {\r\n  \r\n    const url = `https://api.themoviedb.org/3/movie/${movieId}${dataKey}?api_key=${api_key}&language=en-US&page=${paginationPage}`; \r\n    \r\n    axios.get(url).then(result => {    \r\n      ( result.data.total_results) && setIsRecomendationsAvailable(false);     \r\n      setMoviesList(result.data.results);\r\n      setPagesQuantity && setPagesQuantity(result.data.total_pages)\r\n    });  \r\n}, [paginationPage]);\r\nconst moviesListVariants = id ? (moviesList.slice(0, 6)) : moviesList\r\nconst list = moviesListVariants.map(({title, id,  poster_path, vote_average, genre_ids}) => {\r\n  const movieGanres = genre_ids.map(item =>ganresList.filter(({id})=>id===item).map(({name})=>name)[0]); \r\n  const genres = movieGanres.map(item =>(  \r\n    <p key={uuidv4()}>{item}</p>   \r\n  ));\r\n  \r\n  return (\r\n<MovieBreff  key={id} height={props.height} width={props.width}>\r\n    <Linck to={`/movieDetales/${id}`}>\r\n      <Title width={props.width}>\r\n        <p className=\"movieTille\">{title}</p>\r\n      </Title>       \r\n        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"not found\"></img>\r\n        <ItemFooter width={props.width}>       \r\n          <Reiting >\r\n          <p>{`Reting  ${vote_average}`}</p>       \r\n        </Reiting>      \r\n        <Ganres>\r\n           {genres}\r\n        </Ganres>\r\n        </ItemFooter>       \r\n    </Linck>\r\n   </MovieBreff>\r\n  )\r\n}\r\n ) \r\n\r\nreturn <AllMovies>{!isRecomendationsAvailable ? list : \r\n        (<p>\r\n          No related movies for recommendations\r\n        </p>)}\r\n        </AllMovies>\r\n\r\n});\r\n\r\nconst AllMovies = styled.div`\r\ndisplay: flex;\r\nflex-wrap:wrap;\r\njustify-content: center;\r\n\r\n`\r\nconst Linck = styled(NavLink)`\r\ntext-decoration:none;\r\n`\r\n\r\nconst MovieBreff = styled.div`\r\n background: lightgrey;\r\n margin-left: 10px;\r\n margin-bottom: 20px; \r\n width: ${props=>props.width ? props.width :\"210px\"};\r\n & img{\r\n  display: block;\r\n  margin: 0 auto; \r\n  width:95%;\r\n  height:${props => (props.height ? props.height : \"290px\") } ;\r\n }\r\n & :hover .movieTille{\r\n  text-decoration: underline;\r\n}\r\n`\r\nconst Title = styled.div`\r\ncolor: black;\r\nfont-weight: bold;\r\npadding-left: 5px;\r\nwidth: ${props=>props.width ? props.width*0.9 :\"200px\"};\r\n font-size: ${props=>props.width ? \"12px\" : \"16px\"};  \r\n p{ \r\n  width:inherit;\r\n  text-overflow: ellipsis;\r\n  height: 21px;\r\n overflow:hidden;\r\n white-space: nowrap; \r\n color: DarkSlateGray;\r\n}`\r\n\r\nconst Reiting = styled.div`\r\n>p{\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin: 5px;\r\n  color:black;\r\n}\r\n`\r\nconst Ganres = styled.div`\r\ndisplay: flex;\r\nwidth: 100px;\r\nflex-wrap: wrap;\r\n>p{\r\n  font-size: 12px; \r\n  margin: 0 2px;\r\n  color:black;\r\n}\r\n`\r\nconst ItemFooter = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n`\r\n","import React, { useState, useLayoutEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport styled from 'styled-components';\r\n\r\n//store\r\nimport {setAvalibleGenres} from '../store/reduser';\r\nimport {setIncreasePaginationPage,\r\n          setReducePaginationPage} from '../store/reduser';\r\n //components\r\n  import {Layout} from '../components/common/layout';\r\n  import {MoviesList} from '../components/moviesList';\r\n\r\nconst MapStateToProps = store =>({\r\n  ganresList: store.ganres,\r\n  paginationPage: store.ganres.paginationPage,  \r\n})  \r\n\r\nexport const  HomePage =connect(MapStateToProps, {setAvalibleGenres,setIncreasePaginationPage, setReducePaginationPage})(props=> {\r\n   \r\n  const [pagesQuantity, setPagesQuantity] = useState();\r\nconst {paginationPage} = props\r\nuseLayoutEffect(()=>{\r\n  props.setAvalibleGenres();\r\n},[])\r\n\r\n\r\n  return (\r\n    <Layout>   \r\n      <MoviesData>        \r\n        <MoviesList setPagesQuantity={setPagesQuantity} dataKey={\"popular\"}/>\r\n     </MoviesData>\r\n      <NavyButtons>\r\n        {paginationPage ===1 ? \r\n        <DeactivatedBytton/> :\r\n        <LoadMore onClick={()=>props.setReducePaginationPage()}>&#171;</LoadMore>}\r\n  <p>page {paginationPage} of {pagesQuantity}</p>\r\n        <LoadMore onClick={()=>props.setIncreasePaginationPage()}>&#187;</LoadMore>\r\n      </NavyButtons>\r\n      <ScrollUpButton \r\n        StopPosition={0}\r\n        ShowAtPosition={900}\r\n        EasingType='easeOutCubic'\r\n        AnimationDuration={500}\r\n        style={{bottom:\"55px\"}}\r\n       />\r\n    </Layout>\r\n  );\r\n});\r\n\r\n\r\nconst MoviesData = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\nconst NavyButtons = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\np{\r\n  padding: 0 5px;\r\n  color: white\r\n}\r\n`\r\nconst LoadMore = styled.button`\r\nwidth: 40px;\r\nmargin: 0;\r\nfont-size: 36px;\r\ntext-align: center;\r\n`\r\nconst DeactivatedBytton = styled.button`\r\nwidth: 40px;\r\nmargin: 0;\r\nfont-size: 36px;\r\ntext-align: center;\r\n`\r\n","import { css } from \"styled-components\";\r\n\r\nexport function mediaDesktop(content) {\r\n  return css`\r\n    @media (min-width: 1200px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}\r\n\r\nexport function mediaTablet(content) {\r\n  return css`\r\n    @media (min-width: 768px) and (max-width: 1199px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}\r\n\r\nexport function mediaMobile(content) {\r\n  return css`\r\n    @media (max-width: 767px) {\r\n      ${content}\r\n    }\r\n  `;\r\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from \"styled-components\";\r\nimport {connect} from 'react-redux';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport {Layout} from './common/layout';\r\nimport { mediaMobile } from '../styledMediaBrakepoints';\r\n\r\nimport {MoviesList} from './moviesList';\r\n\r\nconst MapStateToProps = store =>({\r\n  api_key: store.ganres.api_key\r\n}); \r\n\r\nexport const FilmDetails =connect(MapStateToProps)(props => {\r\n  const { api_key} = props;\r\n  const { id } = useParams(); \r\n  const [movieInfo, setMovieInfo] = useState({}); \r\n  \r\n  useLayoutEffect(()=>{\r\n       const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=en-US `     \r\n       axios.get(url).then(result => {\r\n      setMovieInfo(result.data);\r\n    });  \r\n  },[id]);\r\n\r\n  const { original_title,  overview, runtime, poster_path, genres } = movieInfo && movieInfo;\r\n\r\n  const movieGenresList = genres && genres.map(({ name }) => name);\r\n  const ganresList = genres && movieGenresList.map(item => (\r\n    <p key={uuidv4()}>{item}</p>\r\n  ));\r\n \r\n  return(\r\n    <Layout>\r\n      <MovieDitails > \r\n        <MovieCommon>\r\n              <img  src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"not found\"></img>\r\n          <MovieData>     \r\n              <p>{original_title}</p>\r\n              <ExectData>\r\n                <p>Owerviev</p>\r\n                <p>{overview}</p>\r\n              </ExectData>\r\n              <ExectData>\r\n                <p>Genre</p>\r\n                <div>\r\n                  {ganresList}\r\n                </div>\r\n              </ExectData>\r\n              <ExectData>\r\n                <p>Runtime</p>\r\n                <p>{runtime}min</p>\r\n              </ExectData>\r\n            </MovieData>\r\n          </MovieCommon>      \r\n        <RecomendedSection>\r\n          <div>Also may interest</div>\r\n          <MoviesList  dataKey={\"recommendations\"} id={id} height={\"250px\"} width={\"180px\"}/>\r\n      </RecomendedSection>\r\n      <ScrollUpButton \r\n        StopPosition={0}\r\n        ShowAtPosition={800}\r\n        EasingType='easeOutCubic'\r\n        AnimationDuration={500}\r\n        style={{bottom:\"55px\"}}\r\n       />\r\n    </MovieDitails>\r\n  </Layout>\r\n \r\n  )\r\n});\r\n\r\nconst MovieDitails = styled.div`\r\npadding-top: 10px;\r\npadding-bottom: 10px;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color:black;\r\ncolor: white;\r\ndisplay:flex;\r\nflex-direction:column;\r\n${mediaMobile(`\r\nflex-direction:column;\r\nalign-items: center;\r\n`)}\r\n`\r\nconst MovieCommon = styled.div`\r\nmargin: 0 40px;\r\ndisplay:flex;\r\n${mediaMobile(`\r\nflex-direction:column;\r\nalign-items: center;\r\n`)}\r\n& img {  \r\n  margin: 0 10px;\r\n  width: 220px; \r\n  border: 1px solid grey;\r\n}\r\n`\r\nconst MovieData = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items:center;\r\n>p{\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n}\r\n`\r\nconst ExectData = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: flex-start;\r\n & p{ \r\n  margin: 0;\r\n  padding: 3px 5px;\r\n  font-size: 12px;\r\n }\r\n & p:first-child{\r\n  text-align:left;\r\n  vertical-align:middle;\r\n font-weight: bold;\r\n width: 55px;\r\n }\r\n & div{\r\ndisplay:flex;\r\n& p{\r\n  font-weight: 400 !important; \r\n}\r\n }\r\n & p:last-child{\r\n  text-align:left;\r\n  }\r\n`\r\nconst RecomendedSection = styled.div`\r\n margit-top: 30px;\r\n >div{\r\n   margin: 20px auto;\r\n   width: fit-content;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n }\r\n`","import React from 'react';\nimport { BrowserRouter as HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport store from './store/index'\nimport { HomePage } from './pages/homePage';\nimport { FilmDetails } from './components/filmDetails';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/filmsList\">\n        <Switch>\n          <Route exect path='/FilmsList' component={HomePage} />\n          <Route path='/movieDetales/:id' component={FilmDetails} />\n          <Redirect to=\"/FilmsList\" />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}